name: Build and Release WebAssembly Module

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Install wasm-pack
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

    - name: Build WebAssembly
      run: wasm-pack build --target web

    - name: Check for existing release
      id: check_release
      run: |
        release_id=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/latest" \
          | jq -r '.id')
        echo "::set-output name=release_id::$release_id"

    - name: Create or update release
      id: create_release
      run: |
        if [ "${{ steps.check_release.outputs.release_id }}" = "null" ]; then
          response=$(curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"tag_name": "latest", "name": "Latest Release", "body": "This is the latest release of the WebAssembly module.", "draft": false, "prerelease": false}' \
            "https://api.github.com/repos/${{ github.repository }}/releases")
        else
          response=$(curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"body": "This is the latest release of the WebAssembly module."}' \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.check_release.outputs.release_id }}")
        fi
        echo "::set-output name=upload_url::$(echo "$response" | jq -r .upload_url | sed -e 's/{?name,label}//')"

    - name: Upload WebAssembly Module
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pkg/gsea_rs_bg.wasm
        asset_name: gsea_rs_bg.wasm
        asset_content_type: application/wasm

    - name: Upload JavaScript Wrapper
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pkg/gsea_rs.js
        asset_name: gsea_rs.js
        asset_content_type: application/javascript
